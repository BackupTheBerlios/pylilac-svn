#!/usr/bin/env python
# -*- coding: utf-8 -*-
# generated by wxGlade 0.6.3 on Thu Oct 02 09:26:00 2008

import wx
import wx.combo

# begin wxGlade: extracode
# end wxGlade


class StockBitmapButton(wx.BitmapButton):
    def __init__(self, parent, id = wx.ID_ANY, label=u""):
	bitmap = wx.ArtProvider.GetBitmap(label, wx.ART_TOOLBAR, (16,16))
	wx.BitmapButton.__init__(self, parent, id, bitmap)

class CategoryPanelComboCtrl(wx.combo.ComboCtrl):
    class PanelComboPopup(wx.combo.ComboPopup):

        # overridden ComboPopup methods
        def __init__(self, labels):
            wx.combo.ComboPopup.__init__(self)
            self.__rows = len(labels)
            self.__labels = labels
        
        def Init(self):
            self.value = None
            self.curitem = ("0",)*self.__rows

            
        def Create(self, parent):
            panel = wx.Panel(parent, wx.ID_ANY, style = wx.TAB_TRAVERSAL|wx.RAISED_BORDER)
            self.panel = panel
            self.labels = [wx.StaticText(panel, -1, lbl + ":") for lbl in self.__labels]
            self.text_ctrls = [wx.TextCtrl(panel, -1, "") for lbl in self.__labels]
            self.button_area = wx.Panel(panel, -1)
            self.ok_button = wx.Button(panel, -1, "V")

            self.__set_properties()
            self.__do_layout()
            
            panel.Bind(wx.EVT_BUTTON, self.OnOkButton, self.ok_button)
            

        def GetControl(self):
            return self.panel


        def GetStringValue(self):
            return " ".join(self.GetValues())


        def SetStringValue(self, value):
            self.SetValues(value.split(" "))


        def GetAdjustedSize(self, minWidth, prefHeight, maxHeight):
            return wx.Size(minWidth, min(self.__rows*30+25, maxHeight))
                           
        def __set_properties(self):
            self.ok_button.SetMinSize((23, 23))

        def __do_layout(self):
            category_sizer = wx.FlexGridSizer(2, 1, 0, 0)
            button_sizer = wx.FlexGridSizer(1, 3, 0, 0)
            ctrl_sizer = wx.BoxSizer(wx.VERTICAL)
            for r in range(self.__rows):
                            sizer = wx.BoxSizer(wx.HORIZONTAL)
                            sizer.Add(self.labels[r], 3, wx.LEFT|wx.ALIGN_CENTER_VERTICAL, 2)
                            sizer.Add(self.text_ctrls[r], 2, wx.RIGHT|wx.ALIGN_CENTER_VERTICAL, 2)
                            ctrl_sizer.Add(sizer, 1, wx.EXPAND, 0)
            
            category_sizer.Add(ctrl_sizer, 1, wx.EXPAND, 0)
            
            button_sizer.Add(self.button_area, 1, wx.EXPAND, 0)
            button_sizer.Add(self.ok_button, 0, 0, 0)
            button_sizer.AddGrowableCol(0)
            
            category_sizer.Add(button_sizer, 1, wx.EXPAND, 0)
            
            self.panel.SetSizer(category_sizer)
            category_sizer.Fit(self.panel)
            category_sizer.AddGrowableRow(0)
            category_sizer.AddGrowableCol(0)
            
        def SetValues(self, values):
            for i, v in enumerate(values):
                    if i == self.__rows: break
                    self.text_ctrls[i].SetValue(v)
        
        def GetValues(self):
            vs = []
            for v in self.text_ctrls:
                    s = v.GetValue()
                    if s == "":
                            vs.append("0")
                    else:
                            vs.append(s)
            return tuple(vs)


        def OnOkButton(self, event):
            self.value = self.GetStringValue()
            self.curitem = self.GetValues()
            self.Dismiss()
            #event.Skip()

    # overridden ComboCtrl methods
    def __init__(self, parent, id = wx.ID_ANY, choices = [], style = 0):
    	wx.combo.ComboCtrl.__init__(self, parent, id, style = style)
        self.popuppanel = self.PanelComboPopup(choices)
        self.SetPopupControl(self.popuppanel)
    def SetSelection(self, n):
	if n == -1:
		self.popuppanel.SetStringValue("")


    #def Create(self, *args, **kwds):



class TestFrame(wx.Frame):
    def __init__(self, *args, **kwds):
        # begin wxGlade: TestFrame.__init__
        kwds["style"] = wx.DEFAULT_FRAME_STYLE
        wx.Frame.__init__(self, *args, **kwds)
        self.sizer_2_staticbox = wx.StaticBox(self, -1, "Test")
        self.combo_box_1 = wx.ComboBox(self, -1, choices=[], style=wx.CB_DROPDOWN)
        self.combo_box_2 = CategoryPanelComboCtrl(self, -1, choices=["Case", "Number"], style=wx.CB_DROPDOWN)

        self.__set_properties()
        self.__do_layout()
        # end wxGlade

    def __set_properties(self):
        # begin wxGlade: TestFrame.__set_properties
        self.SetTitle("frame_1")
        self.combo_box_2.SetSelection(-1)
        # end wxGlade

    def __do_layout(self):
        # begin wxGlade: TestFrame.__do_layout
        sizer_1 = wx.BoxSizer(wx.VERTICAL)
        sizer_2 = wx.StaticBoxSizer(self.sizer_2_staticbox, wx.VERTICAL)
        sizer_2.Add(self.combo_box_1, 0, wx.ALIGN_CENTER_HORIZONTAL|wx.ALIGN_CENTER_VERTICAL, 0)
        sizer_2.Add(self.combo_box_2, 0, wx.ALIGN_CENTER_HORIZONTAL|wx.ALIGN_CENTER_VERTICAL, 0)
        sizer_1.Add(sizer_2, 1, wx.EXPAND, 0)
        self.SetSizer(sizer_1)
        sizer_1.Fit(self)
        self.Layout()
        # end wxGlade

# end of class TestFrame


if __name__ == "__main__":
    app = wx.PySimpleApp(0)
    wx.InitAllImageHandlers()
    frame_1 = TestFrame(None, -1, "")
    app.SetTopWindow(frame_1)
    frame_1.Show()
    app.MainLoop()
